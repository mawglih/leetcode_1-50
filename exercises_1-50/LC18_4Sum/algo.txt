First step is to sort array. Then set 2 for loops, one starting from 0, another from +1 from the previous loop. Also limit first loop to (length - 3) and second loop to (length - 2) as maximum index. Now select left and right indices, where left is next  index after second loop index and right is very last index of whole array. The while loop is similar to previous 3Sum task. Calculate current sum (indexes: i, j, left, right). Start comparison with target, if target matched push it into answer array. Now you can either check if that quadtuple is already there before pushing, or skip similar numbers fro left and right index by increasing left and decreasing right and comparing values, if values next are the same, then they are skipped. Do the same skip for indices i and j by comparing next values to the right from current. Return answer array of quadruplets.